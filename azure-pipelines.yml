trigger:
  branches:
    include:
      - master

variables:
  buildConfiguration: 'Release'
  vmImageName: 'ubuntu-latest'
  apiWorkingDirectory: ApplicationApi
  uiWorkingDirectory: ApplicationUi


stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Test_and_Build_Dotnet_API
    displayName: 'Test and Build .NET API'
    pool:
      vmImage: '$(vmImageName)'
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        publishWebProjects: false
        projects: '$(apiWorkingDirectory)/Azure.CI.CD.Demo.API.Tests/Azure.CI.CD.Demo.API.Tests.csproj'
        publishTestResults: true
      displayName: 'dotnet test'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '$(apiWorkingDirectory)/Azure.CI.CD.Demo.API/Azure.CI.CD.Demo.API.csproj'
        arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)'
        zipAfterPublish: true
      displayName: 'dotnet publish $(buildConfiguration)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'
        ArtifactName: 'api'
        ArtifactType: 'Container'
      displayName: Publish API Build Artifacts

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: 'scripts'
        ArtifactName: 'scripts'
        ArtifactType: 'Container'
      displayName: Publish Scripts

  - job: Test_and_Build_Angular_UI
    displayName: 'Test and Build Angular UI'
    pool:
      vmImage: '$(vmImageName)'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'

    - script: |
        npm install -g @angular/cli
        npm install
      workingDirectory: $(uiWorkingDirectory)
      displayName: 'npm install'

    - script: ng test --watch=false --browsers=ChromeHeadless
      workingDirectory: $(uiWorkingDirectory)
      displayName: 'ng test'

    - script: ng build --prod --aot=true
      workingDirectory: $(uiWorkingDirectory)
      displayName: 'ng build'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(uiWorkingDirectory)/dist/azure-ci-cd-demo-ui'
        ArtifactName: 'ui'
        ArtifactType: 'Container'
      displayName: Publish UI Build Artifacts